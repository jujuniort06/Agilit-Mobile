{"version":3,"sources":["./src/app/defaulthourworked/defaulthourworked.page.html","./src/app/defaulthourworked/defaulthourworked.module.ts","./src/app/defaulthourworked/defaulthourworked.page.scss","./src/app/defaulthourworked/defaulthourworked.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,0fAA0f,scAAsc,6fAA6f,8bAA8b,6hDAA6hD,+BAA+B,4VAA4V,sCAAsC,4JAA4J,mCAAmC,wJAAwJ,oCAAoC,qW;;;;;;;;;;;;;;;;;;;;;;;;ACA3oI;AACM;AACF;AACU;AAEV;AAEoB;AACG;AAEW;AAI/E,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6EAAqB;KACjC;CACF,CAAC;AAaF;IAAA;IAA0C,CAAC;IAA9B,2BAA2B;QAXvC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4FAAsB;gBACtB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,kFAAiB;aAClB;YACD,YAAY,EAAE,CAAC,6EAAqB,CAAC;SACtC,CAAC;OACW,2BAA2B,CAAG;IAAD,kCAAC;CAAA;AAAH;;;;;;;;;;;;AChCxC,+DAA+D,mK;;;;;;;;;;;;;;;;;;;ACAF;AACT;AACuB;AAO3E;IAUE,+BAAoB,SAAqB;QAArB,cAAS,GAAT,SAAS,CAAY;QATlC,UAAK,GAAS,SAAS,CAAC;QAC/B,iBAAY,GAAG,EAAE,CAAC;QAShB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS,GAAG,sFAAmB,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1E,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IAC/B,CAAC;IAED,mDAAmB,GAAnB;QACE,IAAI,WAAW,GAAS,EAAE,CAAC;QAC3B,WAAW,CAAC,IAAI,GAAU,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,WAAW,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrD,WAAW,CAAC,SAAS,GAAK,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACnD,WAAW,CAAC,QAAQ,GAAM,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAElD,IAAI,CAAC,IAAI,GAAU,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,GAAK,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAM,EAAE,CAAC;QAEtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,kDAAkB,GAAlB;IACA,CAAC;;gBA9B+B,iEAAS;;IAV9B,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,2KAA4C;;SAE7C,CAAC;+EAWgC,iEAAS;OAV9B,qBAAqB,CAyCjC;IAAD,4BAAC;CAAA;AAzCiC","file":"defaulthourworked-defaulthourworked-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>  \\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <div class=\\\"m-top-4\\\">\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\" class=\\\"align-center\\\">\\r\\n            <ion-label class=\\\"font-style-bold\\\" color=\\\"primary\\\">Data</ion-label>\\r\\n            <ion-item class=\\\"p-left-6 p-right-6\\\">\\r\\n              <ion-datetime [(ngModel)]=\\\"date\\\" style=\\\"--placeholder-color: #797777; font-weight: bold\\\" placeholder=\\\"DD-MM-YYYY\\\" displayFormat=\\\"DD-MM-YYYY\\\" min=\\\"2000\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\" class=\\\"align-center\\\">\\r\\n            <ion-label class=\\\"font-style-bold\\\" color=\\\"primary\\\">Intervalo</ion-label>\\r\\n            <ion-item class=\\\"p-left-6 p-right-6\\\">\\r\\n              <ion-datetime [(ngModel)]=\\\"interval\\\" style=\\\"--placeholder-color: #797777; font-weight: bold\\\" placeholder=\\\"HH:MM\\\" displayFormat=\\\"h:mm\\\" min=\\\"2000\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\" class=\\\"align-center\\\">\\r\\n            <ion-label class=\\\"font-style-bold\\\" color=\\\"primary\\\">Hora Inicial</ion-label>\\r\\n            <ion-item class=\\\"p-left-6 p-right-6 align-center\\\">\\r\\n              <ion-datetime [(ngModel)]=\\\"initialHour\\\" style=\\\"--placeholder-color: #797777; font-weight: bold\\\" placeholder=\\\"HH:MM\\\" displayFormat=\\\"HH:mm\\\" min=\\\"2000\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\" class=\\\"align-center\\\">\\r\\n            <ion-label class=\\\"font-style-bold\\\" color=\\\"primary\\\">Hora Final</ion-label>\\r\\n            <ion-item class=\\\"p-left-6 p-right-6\\\">\\r\\n              <ion-datetime [(ngModel)]=\\\"finalHour\\\" style=\\\"--placeholder-color: #797777; font-weight: bold\\\" placeholder=\\\"HH:MM\\\" displayFormat=\\\"HH:mm\\\" min=\\\"2000\\\"></ion-datetime>\\r\\n            </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <div class=\\\"align-center\\\">\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"6\\\">\\r\\n              <agilit-button [color]=\\\"'secondary'\\\" (click)=\\\"confirmAppointments()\\\">Cancelar</agilit-button>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"6\\\">\\r\\n              <agilit-button (click)=\\\"confirmAppointments()\\\">Confirmar</agilit-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </div>\\r\\n      </div>        \\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-item-divider>\\r\\n  </ion-item-divider>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-card-header>    \\r\\n      <div class=\\\"align-center\\\">\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"12\\\">  \\r\\n            <ion-label class=\\\"font-size-large font-style-bold\\\">Total Geral</ion-label>        \\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"12\\\">\\r\\n            <ion-icon name=\\\"time\\\" color=\\\"primary\\\" class=\\\"m-right-2 icon-default-size\\\"></ion-icon>\\r\\n            <ion-label class=\\\"font-size-large font-style-bold\\\">07:30</ion-label>        \\r\\n          </ion-col>\\r\\n        </ion-row>    \\r\\n      </div>\\r\\n      <ion-item-divider>\\r\\n      </ion-item-divider>\\r\\n    </ion-card-header>\\r\\n    \\r\\n    <ion-card-content>\\r\\n      <div *ngFor=\\\"let hourAponted of hoursAponted\\\">\\r\\n        <ion-label class=\\\"font-size-small font-style-bold color-black m-left-2\\\">Data: {{hourAponted.Date | agilitdate}}</ion-label>                \\r\\n        <fa-icon icon=\\\"trash-alt\\\" class=\\\"float-right\\\" size=\\\"1x\\\"></fa-icon>        \\r\\n        <fa-icon icon=\\\"pen\\\" class=\\\"float-right p-right-2\\\" size=\\\"1x\\\"></fa-icon>  \\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-label class=\\\"font-size-small\\\" color=\\\"secondary\\\">In√≠cio: {{hourAponted.InitialHour | agilittime}}</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-label class=\\\"font-size-small\\\" color=\\\"secondary\\\">Intervalo: {{hourAponted.Interval | agilittime}}</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-label class=\\\"font-size-small\\\" color=\\\"secondary\\\">Final: {{hourAponted.FinalHour | agilittime}}</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-label class=\\\"font-size-small\\\" color=\\\"secondary\\\">Total: 06:30</ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-item-divider>\\r\\n        </ion-item-divider>\\r\\n      </div>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DefaultHourWorkedPage } from './defaulthourworked.page';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\nimport { AgilitButtonComponent } from 'src/app/agilit-button/agilit-button.component';\nimport { CustomComponentsModule } from 'src/app/utils/customComponents.module';\nimport { AgilitDatePipe } from 'src/app/pipe/date.pipe';\nimport { AgilitTimePipe } from 'src/app/pipe/time.pipe';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DefaultHourWorkedPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CustomComponentsModule,\n    RouterModule.forChild(routes),\n    FontAwesomeModule\n  ],\n  declarations: [DefaultHourWorkedPage]\n})\nexport class DefaultHourWorkedPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlZmF1bHRob3Vyd29ya2VkL2RlZmF1bHRob3Vyd29ya2VkLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ViewUtils } from 'src/app/utils/viewUtils';\r\nimport { EventEmitterService } from '../eventemitter/eventemitter.service';\r\n\r\n@Component({\r\n  selector: 'app-defaulthourworked',\r\n  templateUrl: './defaulthourworked.page.html',\r\n  styleUrls: ['./defaulthourworked.page.scss'],\r\n})\r\nexport class DefaultHourWorkedPage implements OnInit, OnDestroy {\r\n  public order : any = undefined;\r\n  hoursAponted = [];  \r\n  date        : string;\r\n  initialHour : string;\r\n  finalHour   : string;\r\n  total       : string;\r\n  interval    : string;\r\n  public subscribe : any;\r\n\r\n  constructor(private viewUtils : ViewUtils){\r\n    this.initializingObject();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscribe = EventEmitterService.get('defaultOrderData').subscribe((data) => {\r\n      this.order = data;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.subscribe.unsubscribe();\r\n  }  \r\n  \r\n  confirmAppointments(){\r\n    let hourAponted : any = {};\r\n    hourAponted.Date        = new Date(this.date);\r\n    hourAponted.InitialHour = new Date(this.initialHour);\r\n    hourAponted.FinalHour   = new Date(this.finalHour);\r\n    hourAponted.Interval    = new Date(this.interval);\r\n\r\n    this.date        = '';\r\n    this.initialHour = '';\r\n    this.finalHour   = '';\r\n    this.interval    = '';\r\n\r\n    this.hoursAponted.push(hourAponted);\r\n  }\r\n\r\n  initializingObject(){\r\n  }\r\n}\r\n"],"sourceRoot":""}